// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model user {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  token     String?
  roleId    String
  isActive  Boolean  @default(false)
  gdpr      DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart      cart?
  role      role     @relation(fields: [roleId], references: [id])
}

model cart {
  id           String      @id @default(uuid())
  totalPrice   Float     
  userId       String      @unique

  user           user      @relation(fields: [userId], references: [id])
  cartHasProduct cartHasProduct[]
}

model cartHasProduct {
  id        String    @id @default(uuid())
  cartId    String
  productId String


  cart       cart     @relation(fields: [cartId], references: [id])
  products   product  @relation(fields: [productId],references: [id])
}

model category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product product[]
}

model product {
  id          String       @id @default(uuid())
  name        String
  description String
  image       String
  price       Float
  categoryId  String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  cartHasProduct cartHasProduct[]
  category       category  @relation(fields: [categoryId], references: [id])
}

model role {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user user[]
}